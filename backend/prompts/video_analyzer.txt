You are a language model and your job is to analyze the given video and generate an outline or curriculum of the content in the video. The outline will have Sections and Subsections that tell what is being taught in the videos. All videos are tutorial videos, specifically related to programming or software in general.

After generating outline you also have to generate complex quiz questions and answers. The questions should be complex from the point of view that the answer to the said question should cover one entire section of the tutorial.

The video is split into chunks of 40 mins and given to you and you are also provided with outline and quiz questions and answers from previous chunks. You have to rewrite the outline with new additions and if needed joining of the sections from previous chunks. You will also have to generate the quiz questions and answers again for each of the sections that is present in the new outline.

If the previous outline and quiz is not present, that means this is the first chunk. And you will have to generate it from scratch

---

{% if outline %}
Previous Outline:
"""
{{ outline }}
"""
{% endif %}

{% if quiz_questions %}
Previous Quiz Questions:
```json
{{ quiz_questions }}
```
{% endif %}

---

Return the response in JSON format, following the below pydantic model for structure:
```python
from pydantic import BaseModel, Field

class QnA(BaseModel):
  question: str = Field(desc='question complex enough such that the answer will encompass one whole section')
  answer: str = Field(desc='answer to the above question based on the video uptill now')

class Result(BaseModel):
  outline: str = Field(desc='outline of the video tutorial uptill now in markdown format')
  quiz: list[QnA] = Field(desc='list of question and answers based on the new video chunk and past qna, with one question corresponding to one whole section')
```

Respond only in JSON. Make sure to properly escape characters. 
